NAME
    Linux::usermod - modify user and group accounts

SYNOPSIS
      use Linux::usermod;
  
      $user = Linux::usermod->new(username);
      $grp  = Linux::usermod->new(groupname, 1);
  
      $user->get(gid); # equal to $user->get(3);
      $user->get(uid); # equal to $user->get(2);
      $grp->get(gid);  # equal to $user->get(2);
      $grp->get(users);# equal to $user->get(3);
  
      #lock and unlock user account

      $user->lock();
      $user->unlock();

      #get password(passwd file)
      $user->get(ppassword);

      #get encoded password(shadow file)
      $user->get(password); 
  
      #set encoded password
      $user->set(password); 
      $grp->set(password);
  
      #set shell / group administrator
      $user->set(shell);
      $grp->set(ga);

      #set group users
      @users = wq(user1 user2);
      $grp->set(users, \@users);
  
      Linux::usermod->add(username);

      #or

      Linux::usermod->add(username, password, uid, gid, comment, home, shell);

      #where the password goes in shadow file and gid becomes 
      #equal to uid unless specified and uid is becoming the 
      #first unreserved number after 1000 unless specified
  
      #or
  
      @users = qw(user1 user2 user3);
      Linux::usermod->grpadd(groupname, gid, "@users")

      #where the password goes in gshadow file and gid becomes
      #equal to the second argument or the first unreserved number
      #after 100 

      #delete user/group
      Linux::usermod->del(username);
      Linux::usermod->grpdel(groupname);
  
      #all fields are returned from the class methods fields/gfields
      print $user->get($_) for (Linux::usermod->fields);
      print $grp->get($_) for (Linux::usermod->gfields);

      #set working passwd and shadow files

      #$Linux::usermod::file_passwd = "./my_passwd";
      #$Linux::usermod::file_shadow = "./my_shadow";
      #$Linux::usermod::file_group  = "./my_group";
      #$Linux::usermod::file_gshadow= "./my_gshadow";

DESCRIPTION
    This module adds, removes and modify user and group accounts according
    to the passwd and shadow files syntax (like struct passwd from pwd.h).
    It is not necessary those accounts to be system as long as
    $Linux::usermod::file_passwd, $Linux::usermod::file_shadow,
    $Linux::usermod::file_group, $Linux::usermod::file_gshadow are not in
    "/etc" directory.

METHODS
    new
             Linux::usermod->new(username)
             Linux::usermod->new(grpname, 1)

            If group object second 'true' argument must be given

    add     (username, ...) Class method - add new user account; arguments
            are optional, except username; they may be (username, password,
            uid, gid, comment, home, shell)

    del     (username) Class method - removes user account

    tobsd   converts user fields in shadow / master.passwd file to bsd style

    get     if used with user object returns one of the following fields:

              'name'        or 0  The user's name
              'ppassword'   or 1  The "passwd" file password
              'uid'         or 2  The user's id
              'gid'         or 3  The user's group id
              'comment'     or 4  The comment about the user (real username)
              'home'        or 5  The user's home directory
              'shell'       or 6  The user's shell
              'sname'       or 7  The user's name in shadow file
              'password'    or 8  The 13-character encoded password
              'lastchg'     or 9  The number of days since January 1, 1970 of the last password changed date
              'min'         or 10 The minimum number of days required between password changes
              'max'         or 11 The maximum number of days the password is valid
              'warn'        or 12 The number of days before expiring the password that the user is warned
              'inactive'    or 13 The number of days of inactivity allowed for the user
              'expire'      or 14 The number of days since January 1, 1970 that account is disabled
              'flag'        or 15 Currently not used

            if used with group object returns one of the following fields:

              'name'        or 0  The group name
              'ppassword'   or 1  The group password
              'gid'         or 2  The group id number
              'users'       or 3  The group members (users)
              'sname'       or 4  The group name in gshadow file (the same as 'name')
              'password'    or 5  The encrypted group password
              'ga'          or 6  The group administrators
              'gu'          or 7  The group members (users) (the same as 'users')

            argument can be either string or number

    set     (field)

            seet a field which must be string of characters: keys %fields
            for user object keys %gfields for group object

    grpadd  (groupname)

    grpdel  (groupname)

    lock    (username) Lock user account (puts '!' at the beginning of the
            encoded password)

    unlock  (username) Unlock user account (removes '!' from the beginning
            of the encoded password)

    users   Class method - return hash which keys are all users, taken from
            $file_passwd

    grps    Class method - return hash which keys are all groups, taken from
            $file_group

FILES
    /etc/passwd /etc/shadow /etc/group /etc/gshadow

    unless given your own passwd, shadow, group, gshadow files which must be
    created

TO DO
    Groups and user accounts consistency checks

SEE ALSO
    getpwent(3), getpwnam(3), usermod(8), passwd(1), gpasswd(1)

BUGS
    None known. Report any to author.

AUTHOR
    Vidul Petrov, vidul@abv.bg

    © 2004 Vidul Petrov. All rights reserved.

    This library is free software; you can redistribute it and/or modify it
    under the same terms as Perl itself.

